plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.2.71'
    id "org.flywaydb.flyway" version "5.2.4"
    id 'nu.studer.jooq' version '3.0.3'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "org.flywaydb.flyway"
apply plugin: 'nu.studer.jooq'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    runtime 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core:5.2.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

def db_url = "jdbc:postgresql://localhost:5432/fancyFilterDB"
def db_user = "neptunium"
def db_password = "the-best-db-password-ever!"

flyway {
    url = db_url
    user = db_user
    password = db_password
}

jooq {
    fancyFilterApp(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = db_url
            user = db_user
            password = db_password
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = false
                fluentSetters = true
            }
            target {
                packageName = 'jooq.fancyFilterApp'
                directory = 'src/main/java/generated'
            }
        }
    }
}

generateFancyFilterAppJooqSchemaSource.dependsOn flywayMigrate
build.dependsOn generateFancyFilterAppJooqSchemaSource
