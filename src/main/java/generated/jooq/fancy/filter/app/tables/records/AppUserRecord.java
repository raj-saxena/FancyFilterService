/*
 * This file is generated by jOOQ.
 */
package jooq.fancy.filter.app.tables.records;


import java.math.BigDecimal;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.fancy.filter.app.tables.AppUser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUserRecord extends UpdatableRecordImpl<AppUserRecord> implements Record11<UUID, String, Short, String, Short, UUID, String, BigDecimal, Short, Boolean, String> {

    private static final long serialVersionUID = -87090873;

    /**
     * Setter for <code>public.app_user.id</code>.
     */
    public AppUserRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.app_user.display_name</code>.
     */
    public AppUserRecord setDisplayName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.app_user.age</code>.
     */
    public AppUserRecord setAge(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.age</code>.
     */
    public Short getAge() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.app_user.job_title</code>.
     */
    public AppUserRecord setJobTitle(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.job_title</code>.
     */
    public String getJobTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.app_user.height_in_cm</code>.
     */
    public AppUserRecord setHeightInCm(Short value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.height_in_cm</code>.
     */
    public Short getHeightInCm() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.app_user.city_id</code>.
     */
    public AppUserRecord setCityId(UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.city_id</code>.
     */
    public UUID getCityId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.app_user.main_photo</code>.
     */
    public AppUserRecord setMainPhoto(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.main_photo</code>.
     */
    public String getMainPhoto() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.app_user.compatibility_score</code>.
     */
    public AppUserRecord setCompatibilityScore(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.compatibility_score</code>.
     */
    public BigDecimal getCompatibilityScore() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.app_user.contacts_exchanged</code>.
     */
    public AppUserRecord setContactsExchanged(Short value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.contacts_exchanged</code>.
     */
    public Short getContactsExchanged() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>public.app_user.favourite</code>.
     */
    public AppUserRecord setFavourite(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.favourite</code>.
     */
    public Boolean getFavourite() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.app_user.religion</code>.
     */
    public AppUserRecord setReligion(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.app_user.religion</code>.
     */
    public String getReligion() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<UUID, String, Short, String, Short, UUID, String, BigDecimal, Short, Boolean, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<UUID, String, Short, String, Short, UUID, String, BigDecimal, Short, Boolean, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return AppUser.APP_USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AppUser.APP_USER.DISPLAY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return AppUser.APP_USER.AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AppUser.APP_USER.JOB_TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return AppUser.APP_USER.HEIGHT_IN_CM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field6() {
        return AppUser.APP_USER.CITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return AppUser.APP_USER.MAIN_PHOTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field8() {
        return AppUser.APP_USER.COMPATIBILITY_SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field9() {
        return AppUser.APP_USER.CONTACTS_EXCHANGED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return AppUser.APP_USER.FAVOURITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return AppUser.APP_USER.RELIGION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getHeightInCm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component6() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getMainPhoto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component8() {
        return getCompatibilityScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component9() {
        return getContactsExchanged();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getFavourite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getReligion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getHeightInCm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value6() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getMainPhoto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value8() {
        return getCompatibilityScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value9() {
        return getContactsExchanged();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getFavourite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getReligion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value2(String value) {
        setDisplayName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value3(Short value) {
        setAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value4(String value) {
        setJobTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value5(Short value) {
        setHeightInCm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value6(UUID value) {
        setCityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value7(String value) {
        setMainPhoto(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value8(BigDecimal value) {
        setCompatibilityScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value9(Short value) {
        setContactsExchanged(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value10(Boolean value) {
        setFavourite(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord value11(String value) {
        setReligion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUserRecord values(UUID value1, String value2, Short value3, String value4, Short value5, UUID value6, String value7, BigDecimal value8, Short value9, Boolean value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppUserRecord
     */
    public AppUserRecord() {
        super(AppUser.APP_USER);
    }

    /**
     * Create a detached, initialised AppUserRecord
     */
    public AppUserRecord(UUID id, String displayName, Short age, String jobTitle, Short heightInCm, UUID cityId, String mainPhoto, BigDecimal compatibilityScore, Short contactsExchanged, Boolean favourite, String religion) {
        super(AppUser.APP_USER);

        set(0, id);
        set(1, displayName);
        set(2, age);
        set(3, jobTitle);
        set(4, heightInCm);
        set(5, cityId);
        set(6, mainPhoto);
        set(7, compatibilityScore);
        set(8, contactsExchanged);
        set(9, favourite);
        set(10, religion);
    }
}
